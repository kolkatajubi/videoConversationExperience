{
  "_args": [
    [
      {
        "raw": "wink-helpers@^2.0.0",
        "scope": null,
        "escapedName": "wink-helpers",
        "name": "wink-helpers",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\suvo\\Desktop\\videoConversationExperience\\node_modules\\wink-bm25-text-search"
    ]
  ],
  "_from": "wink-helpers@^2.0.0",
  "_hasShrinkwrap": false,
  "_id": "wink-helpers@2.0.0",
  "_location": "/wink-helpers",
  "_nodeVersion": "8.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/wink-helpers_2.0.0_1541055945337_0.6516070035995258"
  },
  "_npmUser": {
    "name": "sanjaya",
    "email": "sanjaya@graype.in"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "wink-helpers@^2.0.0",
    "scope": null,
    "escapedName": "wink-helpers",
    "name": "wink-helpers",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/wink-bm25-text-search",
    "/wink-distance",
    "/wink-nlp-utils"
  ],
  "_resolved": "https://registry.npmjs.org/wink-helpers/-/wink-helpers-2.0.0.tgz",
  "_shasum": "0aec1a2bddd0adcf9e6deb3bf7fa70c7e92dbe5c",
  "_shrinkwrap": null,
  "_spec": "wink-helpers@^2.0.0",
  "_where": "C:\\Users\\suvo\\Desktop\\videoConversationExperience\\node_modules\\wink-bm25-text-search",
  "author": {
    "name": "Sanjaya Kumar Saxena"
  },
  "bugs": {
    "url": "https://github.com/winkjs/wink-helpers/issues"
  },
  "dependencies": {},
  "description": "Functions for cross validation, shuffle, cartesian product and more",
  "devDependencies": {
    "chai": "^4.2.0",
    "coveralls": "^3.0.2",
    "docco": "^0.8.0",
    "eslint": "^5.8.0",
    "istanbul": "^1.1.0-alpha.1",
    "jshint": "^2.9.5",
    "mocha": "^5.2.0",
    "mocha-lcov-reporter": "^1.3.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-I/ZzXrHcNRXuoeFJmp2vMVqDI6UCK02Tds1WP4kSGAmx520gjL1BObVzF7d2ps24tyHIly9ngdB2jwhlFUjPvg==",
    "shasum": "0aec1a2bddd0adcf9e6deb3bf7fa70c7e92dbe5c",
    "tarball": "https://registry.npmjs.org/wink-helpers/-/wink-helpers-2.0.0.tgz",
    "fileCount": 7,
    "unpackedSize": 35740,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb2qXKCRA9TVsSAnZWagAAeIwP/1fVqK4d+YCYjhx62fWI\nNJwkpGNMflF6br2aoyiDx6JciJTLRnihHfdN5z9QVmSafL1IyfePwH26yw6T\nnNxq7ViSD+E4QJG4mL4ztp+5CQtNyS1Qhw5gd4EgyBwDZmnAjCORqv8MUQbp\nweNC4Q35K+M06q11Mxhk1KC63c1AWgay/z7UChJpYM3VO9xUEMCaT/4aUMaF\nzMOY9i1b/4CsV58wL9zUOxak01AQI1G+oVfyfhZ2/1cMPaxBHCGNuZ9QY7by\nxD01vsZQhHGJ93FtAOw+LXiU9AyHjwduP8Rt5QOw9MlG39FEJY18Ly/h+b78\niXnCqrV+Nxw6BJCxafFnM4C+Npo69cjDRQoWDXLPMMZoi48zP2zAZNjxeUJG\n5PJR+Nl4zlR595/sfa4nrDQ0whWs8g/twLfeHdYHq79u31jTEUYz41HkxP//\nYpcWih+8sHabiiuxWY9MKVcArTu7EBHkN8UmB6p3UaN5Oo6mSSyeYvn3iW6F\nSdTYtt8f/Np4FDGin2tbAZVjRNO/FsHB0QdxpwB5MzNEBKmZ0GyUfIxEICCJ\na0xBpuz8LS4ImnngdKmKnqgJNtlsOOx3oO+lFRsVN0q12wU89PcVfVs0VnUP\nNxqw7b1JuQ+lRLTC+A4MMoZuL8k02HrFTmgsfZZCPJGEhf3pgSy5jV7tWWKt\nzmlc\r\n=xwZh\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "ce2792a3f0e1bcd067d151a8ca2cd41ffddc89f6",
  "homepage": "http://winkjs.org/",
  "keywords": [
    "Array",
    "Object",
    "String",
    "Helper",
    "Cartesian Product",
    "Frequency Table",
    "Validate",
    "Validation",
    "Sort",
    "Pluck",
    "Shuffle",
    "Random Shuffle",
    "Cross Validation",
    "Machine Learning"
  ],
  "license": "MIT",
  "main": "src/wink-helpers.js",
  "maintainers": [
    {
      "name": "prtksxna",
      "email": "prtksxna@gmail.com"
    },
    {
      "name": "r4chn4",
      "email": "rachna@graype.in"
    },
    {
      "name": "sanjaya",
      "email": "sanjaya@graype.in"
    }
  ],
  "name": "wink-helpers",
  "optionalDependencies": {},
  "readme": "\n# wink-helpers\nFunctions for cross validation, shuffle, cartesian product and more\n\n### [![Build Status](https://api.travis-ci.org/winkjs/wink-helpers.svg?branch=master)](https://travis-ci.org/winkjs/wink-helpers) [![Coverage Status](https://coveralls.io/repos/github/winkjs/wink-helpers/badge.svg?branch=master)](https://coveralls.io/github/winkjs/wink-helpers?branch=master) [![Inline docs](http://inch-ci.org/github/winkjs/wink-helpers.svg?branch=master)](http://inch-ci.org/github/winkjs/wink-helpers) [![devDependencies Status](https://david-dm.org/winkjs/wink-helpers/dev-status.svg)](https://david-dm.org/winkjs/wink-helpers?type=dev) [![Gitter](https://img.shields.io/gitter/room/nwjs/nw.js.svg)](https://gitter.im/winkjs/Lobby)\n\n<img align=\"right\" src=\"https://decisively.github.io/wink-logos/logo-title.png\" width=\"100px\" >\n\nPerform cross validation for machine learning, shuffle an array randomly, remove diacritical marks from text, find cartesian product and more using **`wink-helpers`**.\n\n\n## Installation\nUse [npm](https://www.npmjs.com/package/wink-helpers) to install:\n```\nnpm install wink-helpers --save\n```\n\n\n## Example [![Try on Runkit](https://badge.runkitcdn.com/wink-helpers.svg)](https://npm.runkit.com/wink-helpers)\n\n```javascript\n// Load wink helpers\nvar helpers = require( 'wink-helpers' );\n\n\n/* Use array helpers */\nconsole.log( helpers.array.isArray( [] ) );\n// -> true\n\nvar ppl = [ { name: 'aiden', age: 42 }, { name: 'olivia', age: 37 } ];\nconsole.log( ppl.sort( helpers.array.ascendingOn( 'age' ) ) );\n// -> [ { \"name\": \"olivia\", \"age\": 37 }, { \"name\": \"aiden\", \"age\": 42 } ]\n\nconsole.log( helpers.array.product( [ [ 9, 8 ], [ 1, 2 ] ] ) );\n// -> [ [ 9, 1 ], [ 9, 2 ], [ 8, 1 ], [ 8, 2 ] ]\n\nconsole.log( helpers.array.shuffle( [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ] ) );\n// -> [ 3, 7, 8, 9, 6, 4, 2, 1, 10, 5 ]\n// Note: output will change on every call!\n\n/* Use object helpers */\nconsole.log( helpers.object.isObject( {} ) );\n// -> true\n\nconsole.log( helpers.object.isObject( new Set() ) );\n// -> false\n\nconsole.log( helpers.object.table( { mobile: 33, chargers: 45, usb: 27 } ) );\n// -> [ [ \"mobile\", 33 ], [ \"chargers\", 45 ], [ \"usb\", 27 ] ]\n\n\n/* Use string helper */\nconsole.log( helpers.string.normalize( 'Résumé' ) );\n// -> 'resume'\n```\n\n## API\nThe helper functions are classified into [array](#array), [object](#object), [string](#string) and [validate](#validate).\n\n### array\n\n#### isArray( value )\nTests if argument `value` is a valid JS array; returns `true` if it is, otherwise returns `false`.\n\n#### sorting compare functions\nIt is a set of handy [compare functions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) for handling a variety of array sorting needs.\n\n| compareFunction | Description |\n| --- | --- |\n| ascending | Sorts elements in ascending order. |\n| descending | Sorts elements in descending order. |\n| ascendingOnKey | It works on array of arrays, where each element is in the `[ key, value ]` format. Sorts elements in ascending order on the `key`.  |\n| descendingOnKey | Same as above, but sorts in descending order.  |\n| ascendingOnValue | It works on array of arrays, where each element is in the `[ key, value ]` format. Sorts elements in ascending order on the `value`.  |\n| descendingOnValue | Same as above, but sorts in descending order.  |\n| ascendingOn( `accessor1` [,`accessor2`] ) | A higher order function that returns a compare function for the accessors — refers to a key whose value will be used to determine the sort order.<br/><br/>Can be directly used as the compare function for sort.<br/><br/>It works on array of *arrays* or *objects*. <br/><br/> When both the accessors are supplied, the combination is treated as a composite key for sort. |\n| descendingOn( `accessor1` [,`accessor2`] ) | Same as above, but sorts in descending order. |\n\n\n\n#### pluck( array, key, limit )\nPlucks the values specified by the `key` from each element of the `array` of *arrays* or *objects*, and returns the resultant array. The default value of `key` is **0**. The number of elements to be plucked is defined by the `limit`, whose default value is `array.length`.\n\n#### product( array )\nReturns the *cartesian product* of the arrays present inside the `array` argument. For example, if the `array` argument is `[ [ 1, 2, 3 ], [ 4 ], [ 5, 6 ] ]`, then the return value will be:\n```javascript\n[\n  [ 1, 4, 5 ],\n  [ 1, 4, 6 ],\n  [ 2, 4, 5 ],\n  [ 2, 4, 6 ],\n  [ 3, 4, 5 ],\n  [ 3, 4, 6 ]\n]\n```\n#### shuffle( array )\nRandomly shuffles the order of the elements in the input array using algorithm described in Chapter 3 on Random Numbers of \"The Art of Computer Programming Volume II\" by Donald E Knuth.\n\n### object\n\n#### isObject( value )\nTests if argument `value` is a JS object; returns `true` if it is, otherwise returns `false`.\n\n#### keys( obj )\nReturns keys of the `obj` in an `array`.\n\n#### size( obj )\nReturns the number of *keys* in the `obj`.\n\n#### values( obj )\nReturns all the *values* from each `key: value` pair in the `obj` in form of an array.\n\n#### valueFreq( obj )\nReturns the *frequency* or *count* of every unique value from each `key: value` pair in the `obj` in form of an object.\n\n#### table( obj [, f] )\nConverts each `key: value` pair in the `obj` into an array of `[ key, value ]` pairs. Note the returned value be an array of array. Second argument - `f` is optional; it is a function, which is called with each *value*.\n\n### string\n\n#### normalize( str )\nNormalizes the `str` by converting it to lower case and stripping the diacritical marks (if any).\n\n### validate\n\n#### isArray( value )\nAlias for `array.isArray()`.\n\n#### isObject( value )\nAlias for `object.isObject()`.\n\n#### isFiniteInteger( value )\nTests if argument `value` is a finite integer; returns `true` if it is, otherwise returns `false`.\n\n#### isFiniteNumber( value )\nTests if argument `value` is a finite number; returns `true` if it is, otherwise returns `false`.\n\n#### cross( classLabels )\nPerforms cross validation and generates detailed performance metrics along with the confusion matrix. It is a higher order function that returns an object containing `evaluate()`, `metrics()`,  and `reset()` functions. The `classLabels` should be an array containing all the class labels that may be predicted.\n\nThe `evaluate()` function accepts two parameters viz. `truth` — the actual label and `guess` — the predicted label. It is typically called for every row of validation dataset. The evaluation may fail if `truth` or `guess` value is not a valid `classLabels`; or if guess is equal to `unknown`.\n\nThe `metrics()` returns an object containing macro-averaged `avgPrecision`, `avgRecall`,  `avgFMeasure` values along with other details such as label-wise recall/precision/f-measure values and the confusion matrix. A value of `null` is returned if no evaluate() has been called before.\n\nThe `reset()` re-initializes the current instance for another round of evaluation; the class labels defined at instance creation time are not touched.\n\n## Need Help?\nIf you spot a bug and the same has not yet been reported, raise a new [issue](https://github.com/winkjs/wink-helpers/issues) or consider fixing it and sending a pull request.\n\n### About wink\n\n[Wink](http://winkjs.org/) is a family of open source packages for **Statistical Analysis**, **Natural Language Processing** and **Machine Learning** in NodeJS. The code is **thoroughly documented** for easy human comprehension and has a **test coverage of ~100%** for reliability to build production grade solutions.\n\n\n## Copyright & License\n**wink-helpers** is copyright 2017-18 [GRAYPE Systems Private Limited](http://graype.in/).\n\nIt is licensed under the terms of the MIT License.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/winkjs/wink-helpers.git"
  },
  "runkitExampleFilename": "runkit/example.js",
  "scripts": {
    "coveralls": "istanbul cover _mocha --report lcovonly -- -R spec && cat ./coverage/lcov.info | coveralls && rm -rf ./coverage",
    "docs": "docco -o ./docs/ ./src/*.js",
    "lint": "eslint ./src/*.js ./test/*.js",
    "pretest": "npm run lint",
    "test": "istanbul cover _mocha ./test/"
  },
  "version": "2.0.0"
}
